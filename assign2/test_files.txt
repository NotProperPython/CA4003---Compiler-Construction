// Three versions of the simplest non-empty file demonstrating that the language is case insensitive.
 

main
begin
end

 
// ---------------------------------------------------------------------------
 

Main
begin
end

 
// ---------------------------------------------------------------------------
 

MAIN
begin
end

 
// -------------- A simple file demonstrating comments ----------------------
 

main
begin
// a simple comment
/* a comment /* with /* several */ nested */ comments */
end;

 
// -------------- The simplest program that uses functions ----------------------
 

void func() is
begin
    return();
end

main
begin
    func();
end

 
// -------------- A simple file demonstrating the different scopes ------------
 

variable i:integer;

integer test_fn(x:integer) is
	variable i:integer;
begin 
	i := 2;
	return (x);
end

main
begin 
variable i:integer;
	i:= 1;
	i := test_fn(i);
end

 
// -------------- A file demonstrating the use of functions --------------------
 
integer multiply (x:integer, y:integer) is
    variable result:integer;
    variable minus_sign:boolean;
 
begin  
    // figure out sign of result and convert args to absolute values
 
    if (x < 0 & y >= 0)
    begin 
        minus_sign := true;
        x := -x;
    end
    else
    begin
        if y < 0 & x >= 0
        begin
            minus_sign := true;
            y := -y;
        end
        else
        begin
            if (x < 0) & y < 0
            begin 
                minus_sign := false;
                x := -x;
                y := -y;
            end
            else
            begin
                minus_sign := false;
            end
        end
    end
 
    result := 0;
 
    while (y > 0)
    begin
        result := result + x;
        y := y - 1;
    end
 
    if minus_sign = true
    begin
        result := -result;
    end
    else
    begin
        skip;
    end
        return(result);
end

main
begin
    variable arg_1:integer;
    variable arg_2:integer;
    variable result:integer;
    constant five:integer := 5;
 
    arg_1 := -6;
    arg_2 := five;
 
    result := multiply (arg_1, arg_2);
end